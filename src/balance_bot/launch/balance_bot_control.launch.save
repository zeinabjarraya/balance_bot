<launch>
    <!-- Load URDF and controllers -->
    <param name="robot_description" command="$(find xacro)/xacro '$(find balance_bot)/urdf/balance_bot.urdf.xacro'" />
    <rosparam file="$(find balance_bot)/config/balance_bot_controllers.yaml" command="load"/>

    <!-- Controller Manager -->
    <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false"
          output="screen"
          args="joint_state_controller left_wheel_effort_controller right_wheel_effort_controller"/>

    <!-- Start Enhanced Balance Controller -->
    <node pkg="balance_bot" type="pid_balance.py" name="enhanced_balance_controller" output="screen">
        <!-- Complementary Filter -->
        <param name="alpha" value="0.98" />
        
        <!-- Angle PID (Balance Control) -->
        <param name="angle_kp" value="30.0" />  <!-- Start conservative -->
        <param name="angle_ki" value="1.0" />   <!-- Reduced integral -->
        <param name="angle_kd" value="7.0" />   <!-- Moderate damping -->
        
        <!-- Position Control (Stay in Place) -->
        <param name="pos_kp" value="0.0" />     <!-- Gentle position correction -->
        <param name="pos_kd" value="0.0" />     <!-- Velocity damping -->
        
        <!-- Velocity Damping -->
        <param name="vel_kd" value="0.3" />     <!-- Additional smoothing -->
        
        <!-- Safety Limits -->
        <param name="max_effort" value="20.0" />
        <param name="position_error_threshold" value="0.05" />  <!-- Meters -->
        
        <!-- Debugging -->
        <param name="debug_mode" value="true" />  <!-- Enables verbose logging -->
    </node>

    <!-- Optional: Launch odometry checker for debugging -->
    <node pkg="rqt_plot" type="rqt_plot" name="odom_plot"
          args="/odom/pose/pose/position/x /odom/twist/twist/linear/x"/>
</launch>
